#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Aug  9 23:12:06 2017

@author: eyulush
"""

import common
import pandas as pd

# environment
pd.options.display.max_rows = 999

def merge_data(df_data, order_data):
    # choose the feature to merge
    merge_features = [
        'user_id', 'product_id', # these 2 feature will be merge key
        #'product_name',#'prod_users_unq',
        #'reordered_sum',# 'user_product_reordered_ratio',#'reorder_ration',#'reorder_prob',
        #'user_distinct_products', #'user_total_products', #'user_average_basket', #'up_orders_since_last_order',
        #'up_order_rate_since_first_order', #'aisle_reordered_ratio',
        'dep_products', 'dep_reordered', 'aisle_products', 'aisle_reordered',
        'prod_users_unq_reordered', 'up_orders', 'up_first_order', 'up_last_order',
        'up_mean_cart_position', 'up_median_cart_position', 'days_since_prior_order_mean',
        'days_since_prior_order_median', 'order_dow_mean', 'order_dow_median',
        'order_hour_of_day_mean', 'order_hour_of_day_median', 'add_to_cart_order_inverted_mean',
        'add_to_cart_order_inverted_median', 'add_to_cart_order_relative_mean', 'add_to_cart_order_relative_median',
        'user_order_starts_at', 'user_mean_days_since_prior', 'user_median_days_since_prior',
        'user_reorder_ratio', 'up_order_rate', 'dep_reordered_ratio',
        'last', 'prev1', 'prev2', 'median', 'mean',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
        '20', '21', '22', '23', '24', '25', '26', '27', '28', '29',
        '30', '31']

    # merge
    df_data_shape=df_data.shape
    df_data = pd.merge(left=df_data,right=order_data[merge_features], how='left', on=['user_id','product_id'])

    assert(df_data.shape == (df_data_shape[0],df_data_shape[1]+len(merge_features)-2))
    return df_data

def get_all_training_data():
    df_train = common.load_df('../data/', 'train_data')
    order_train=common.load_df('../data/', 'lgb_order_train', no_converter=True, index_col=0)
    return merge_data(df_train, order_train)

def get_all_test_data():
    df_test = common.load_df('../data/', 'test_data')
    order_test=common.load_df('../data/', 'lgb_order_test', no_converter=True, index_col=0)
    return merge_data(df_test, order_test)

if __name__ == '__main__':
    df_data = get_all_training_data()
    common.save_df(df_data, '../data/', 'df_imba_train',index=False)
   
    df_data = get_all_test_data()
    common.save_df(df_data, '../data/', 'df_imba_test',index=False)